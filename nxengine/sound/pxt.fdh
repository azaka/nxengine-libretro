//hash:7e48fc6f
//automatically generated by Makegen

/* located in sound/sslib.cpp */

//-------------------[referenced from sound/pxt.cpp]-----------------//
#ifdef __cplusplus
extern "C" {
#endif

int SSPlayChunk(int c, signed short *buffer, int len, int userdata, void(*FinishedCB)(int, int));
int SSEnqueueChunk(int c, signed short *buffer, int len, int userdata, void(*FinishedCB)(int, int));
void SSAbortChannel(int c);

#ifdef __cplusplus
}
#endif

/* located in sound/pxt.cpp */

//-------------------[referenced from sound/pxt.cpp]-----------------//
static unsigned short rand_next(void);
static void GenerateSineModel(unsigned char *table);
static void GenerateTriangleModel(unsigned char *table);
static void GenerateSawUpModel(unsigned char *table);
static void GenerateSawDownModel(unsigned char *table);
static void GenerateSquareModel(unsigned char *table);
static void GenerateRandModel(unsigned char *table);
void GenerateWhiteModel(void);
static void GeneratePulseModel(unsigned char *table);
char pxt_init(void);
char pxt_initsynth(void);

#ifdef __cplusplus
extern "C" {
#endif

char pxt_SetModel(stPXWave *pxwave, int m);

#ifdef __cplusplus
}
#endif

void pxt_SetDefaultEnvelope(stPXEnvelope *env);
void GenerateEnvelope(stPXEnvelope *env, char *buffer);
void pxt_RenderPXWave(stPXWave *pxwave, signed char *buffer, int size_blocks);
static void CreateAudio(stPXChannel *chan);
static char AllocBuffers(stPXSound *snd);
char pxt_Render(stPXSound *snd);
void pxt_PrepareToPlay(stPXSound *snd, int slot);
void pxt_ChangePitch(stPXSound *snd, double factor);
int pxt_Play(int chan, int slot, char loop);
static void pxtSoundDone(int chan, int slot);
static void pxtLooper(int chan, int slot);
void pxt_Stop(int slot);
char pxt_IsPlaying(int slot);
char pxt_LoadSoundFX(FILE *fp, int top);
void pxt_freeSoundFX(void);
void pxt_FreeSound(int slot);
void FreePXTBuf(stPXSound *snd);
#ifdef __cplusplus
extern "C" {
#endif
char pxt_load(RFILE *fp, stPXSound *snd, int slot);
#ifdef __cplusplus
}
#endif

/* located in common/misc.cpp */

#ifdef __cplusplus
extern "C" {
#endif

//-------------------[referenced from sound/pxt.cpp]-----------------//
void seedrand(uint32_t newseed);
int nx_random(int min, int max);
uint32_t fgetl(FILE *fp);

#ifdef __cplusplus
}
#endif
